! nepop: number of electron populations
! nipop: number of ion populations
! ne(i): density (in SI) of electron of population i
! fromne(i): previous density. Used when changing electron density at
!            restart. Ignored if negative. Default: -999.
! ni(i): density (in SI) of ion of population i
! fromni(i): previous density. Used when changing ion density at
!            restart. Ignored if negative. Default: -999.
! te(i): temperature (in eV) of electron population i
! ti(i): temperature (in eV) of ion population i
! vexyz(1-3,i): velocity components for electron population i
! vixyz(1-3,i): velocity components for ion population i
! qi(i): charge (in units of e) of ion of population i
! mi(i): mass (in amu) of ion of population i
! ke(i,j): position (i=1-3), velocity (i=4-6), statistical weight (i=7)
!          of electron j
! ki(i,j): position (i=1-3), velocity (i=4-6), mass (i=7), charge (i=8)
!          statistical weight (i=9) of ion j
! kegrd(i): index of the cell containing electron i
! kigrd(i): index of the cell containing ion i
! netot: total number of electrons
! nitot: total number of ions
! nemax: maximum number of electrons
! nimax: maximum number of ions
! magfield: .true. or .false. to account for a magnetic field or not
! b_field: magnetic field vector
! e_field: electric field vector computed from -vixyz x b_field. N.B.: if
!          more than one ion species exist, only the first one is used.
! magmate: matrix used to advance velocities in the presence of a B field
! npepop(i): target number of electrons in population i
! npipop(i): targen number of ions in population i
! wepop(i): electron weight factor in population i
! wipop(i): ion weight factor in population i
! ushif0: normalised orthogonal drift velocity used for injecting particles
!         at a boundary
! randomDristrib: random number in [0,1] used to distribute particles
!   entering a boundary, according to a shited maxwellian distribution
! elbowroom: factor multiplying the estimated number of particles based on
!            a uniform and isotropic distribution

module kinetics
  integer nepop,nipop,netot,nitot,nemax,nimax
  integer, allocatable :: kegrd(:),kigrd(:),npepop(:),npipop(:)
  real, parameter :: elbowroom=1.01
  real ushif0,randomDistrib,b_field(3),e_field(3),magmate(3,3)
  real, allocatable :: ne(:),ni(:),te(:),ti(:),vexyz(:,:),vixyz(:,:), &
    qi(:),mi(:),ke(:,:),ki(:,:),wepop(:),wipop(:),fromne(:),fromni(:)
  logical magfield
endmodule kinetics
